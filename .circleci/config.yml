# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    
    steps:
      # Checkout the code as the first step.
      - checkout
        
      - run:
          name: "Initialize Build"
          command: |
            branch=${CIRCLE_BRANCH//[\/]/_}
            echo "### Normalized Branch Name is $branch"
            
            MVN_VERSION=$( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )
            echo "export ORIGINAL_MVN_VERSION=${MVN_VERSION}" >> $BASH_ENV
            echo "### Current version is: ${MVN_VERSION}"
            
            suffix=$(echo $MVN_VERSION | cut -d \- -f 2)
            echo "### Suffix is: $suffix"
            
            prefix=$(echo $MVN_VERSION | cut -d \- -f 1)
            echo "### Prefix is: $prefix"
            
            # build new version
            if [[ "$branch" != "master" ]]
            then
              NEW_MAVEN_VERSION=${branch}_$prefix-$suffix
            else
              NEW_MAVEN_VERSION=$MVN_VERSION
            fi
            echo "export BRANCH_MVN_VERSION=${NEW_MAVEN_VERSION}" >> $BASH_ENV
            echo "### Branch version is: ${NEW_MAVEN_VERSION}"
            
      - run: 
          name: "Show Build Info"
          command: |
            echo "Creating Build for branch ${CIRCLE_BRANCH}"
            echo "Original Maven Version: ${ORIGINAL_MVN_VERSION}"
            echo "Creating Build with Maven Version: ${BRANCH_MVN_VERSION}"
          
      - run:
          name: Build
          command: |
            mvn -B versions:set -DnewVersion="${BRANCH_MVN_VERSION}"
            mvn -B install

workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build
